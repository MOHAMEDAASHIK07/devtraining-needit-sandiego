<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri>/api/x_58872_needit/web_service_name/userinfo/{user_id}</default_operation_uri>
        <enforce_acl/>
        <http_method>GET</http_method>
        <name>user_info</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    // implement resource here
// implement resource here
  
  
  // Get value from the user_id path parameter passed in the URL
  var requestUser = request.pathParams.user_id;
  // Get value of the demo_query query parameter passed in the URL
  var requestDemoQuery = request.queryParams.web_service_query;
  
  // Query the sys_user table to get the user record for the user passed in
  // the user_id path parameter
  var requestUserName = new GlideRecord('sys_user');
  requestUserName.get(requestUser);
  
  // Aggregation 1: Incident table
  // Get the count of Incident table records where the user from the user_id path
  // parameter is the Caller.
  var userIncidentCount = new GlideAggregate('incident');
  userIncidentCount.addAggregate('COUNT');
  userIncidentCount.addQuery('caller_id',requestUser);
  userIncidentCount.addEncodedQuery(requestDemoQuery);
  userIncidentCount.query();
  
  var incidents = 0;
  if (userIncidentCount.next()) {
    incidents = userIncidentCount.getAggregate('COUNT');
  }
  
  
  // Aggregation 2: Change request table
  // Get the count of Change request table records where the user from the user_id path
  // parameter is the Requested by.
  var userChangeCount = new GlideAggregate('change_request');
  userChangeCount.addAggregate('COUNT');
  userChangeCount.addQuery('requested_by',requestUser);
  userChangeCount.addEncodedQuery(requestDemoQuery);
  userChangeCount.query();
	
  
  var changes = 0;
  if (userChangeCount.next()) {
    changes = userChangeCount.getAggregate('COUNT');
  }
  
  
  // Aggregation 3: Problem table
  // Get the count of Problem table records where the user from the user_id path
  // parameter is the Opened by.
  var userProblemCount = new GlideAggregate('problem');
  userProblemCount.addAggregate('COUNT');
  userProblemCount.addQuery('opened_by',requestUser);
  userProblemCount.addEncodedQuery(requestDemoQuery);
  userProblemCount.query();
  
  var problems = 0;
  if (userProblemCount.next()) {
    problems = userProblemCount.getAggregate('COUNT');
  }
	
	
  // Aggregation 3: Requested Items table
  // Get the count of Problem table records where the user from the user_id path
  // parameter is the Requested for.
	var userRequestedCount = new GlideAggregate('sc_req_item');
	userRequestedCount.addAggregate('COUNT');
	userRequestedCount.addEncodedQuery(requestDemoQuery + '^request.requested_for=' + requestUser);
	userRequestedCount.query();

	var requested = 0;
	if (userRequestedCount.next()) {
		requested = userRequestedCount.getAggregate('COUNT');
	}
  
  
  //Create a body object.  Add property value pairs to the body.
  var body = {};
    body.numInc = incidents;
    body.numChg = changes;
    body.numPrb = problems;
	body.numReq = requested;
    body.user = {"User Name": requestUserName.user_name,
      "User ID": requestUser, "User Email": requestUserName.email};
      
  // Send the response object, which is returned to the requestor, to the body object.
  response.setBody(body);
})(request, response);]]></operation_script>
        <operation_uri>/api/x_58872_needit/v1/web_service_name/userinfo/{user_id}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/userinfo/{user_id}</relative_path>
        <request_example/>
        <requires_acl_authorization>false</requires_acl_authorization>
        <requires_authentication>false</requires_authentication>
        <requires_snc_internal_role>false</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-09 14:19:23</sys_created_on>
        <sys_id>1f3144e5079421103f61f1d08c1ed0dc</sys_id>
        <sys_mod_count>22</sys_mod_count>
        <sys_name>user_info</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ws_operation_1f3144e5079421103f61f1d08c1ed0dc</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-11 11:58:09</sys_updated_on>
        <web_service_definition display_value="Web service name">ffb31b5d07d021103f61f1d08c1ed00a</web_service_definition>
        <web_service_version display_value="v1">30842b6d079061103f61f1d08c1ed0ad</web_service_version>
    </sys_ws_operation>
</record_update>
